// <auto-generated />
using System;
using Headlines.ORM.Core.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Headlines.ORM.Core.Migrations
{
    [DbContext(typeof(HeadlinesDbContext))]
    [Migration("20221120145518_AddHeadlineChange")]
    partial class AddHeadlineChange
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Headlines.ORM.Core.Entities.Article", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CurrentTitle")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .HasColumnName("CURRENT_TITLE");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("LINK");

                    b.Property<DateTime?>("Published")
                        .HasColumnType("datetime2")
                        .HasColumnName("PUBLISHED");

                    b.Property<long>("SourceId")
                        .HasColumnType("bigint")
                        .HasColumnName("SOURCE_ID");

                    b.Property<string>("UrlId")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .HasColumnName("URL_ID");

                    b.HasKey("Id");

                    b.HasIndex("SourceId");

                    b.HasIndex("UrlId");

                    b.ToTable("ARTICLE", (string)null);
                });

            modelBuilder.Entity("Headlines.ORM.Core.Entities.ArticleSource", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("NAME");

                    b.Property<string>("RssUrl")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("RSS_URL");

                    b.Property<int>("UrlIdSource")
                        .HasColumnType("int")
                        .HasColumnName("URL_ID_SOURCE");

                    b.HasKey("Id");

                    b.ToTable("ARTICLE_SOURCE", (string)null);
                });

            modelBuilder.Entity("Headlines.ORM.Core.Entities.HeadlineChange", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ArticleId")
                        .HasColumnType("bigint")
                        .HasColumnName("ARTICLE_ID");

                    b.Property<DateTime>("Detected")
                        .HasColumnType("datetime2")
                        .HasColumnName("DETECTED");

                    b.Property<string>("TitleAfter")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .HasColumnName("TITLE_AFTER");

                    b.Property<string>("TitleBefore")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .HasColumnName("TITLE_BEFORE");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.HasIndex("Detected");

                    b.ToTable("HEADLINE_CHANGE", (string)null);
                });

            modelBuilder.Entity("Headlines.ORM.Core.Entities.Article", b =>
                {
                    b.HasOne("Headlines.ORM.Core.Entities.ArticleSource", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");
                });

            modelBuilder.Entity("Headlines.ORM.Core.Entities.HeadlineChange", b =>
                {
                    b.HasOne("Headlines.ORM.Core.Entities.Article", "Article")
                        .WithMany()
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");
                });
#pragma warning restore 612, 618
        }
    }
}
