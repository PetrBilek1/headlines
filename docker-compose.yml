version: '3.4'

networks:
  headlines.network.internal:

volumes:
  mssql-data:
  rabbitmq-data:
  rabbitmq-log:

services:
  headlines.db:
    container_name: headlines.db
    image: ghcr.io/petrbilek1/mssql-fts-ha:latest
    restart: always
    ports:
      - 8003:1433
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=${DB_PASSWORD}
    networks:
      - headlines.network.internal
    volumes:
      - mssql-data:/var/opt/mssql  
  
  headlines.mq:
    container_name: headlines.mq
    hostname: ${MQ_HOST}
    image: ghcr.io/petrbilek1/rabbitmq-dm:3.11.9
    networks:
      - headlines.network.internal
    ports:
      - 8004:15672
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
      - rabbitmq-log:/var/log/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${MQ_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${MQ_PASSWORD}
      
  headlines.webapi:
    container_name: headlines.webapi
    build:
      context: .
      dockerfile: Headlines.WebAPI/Dockerfile 
    depends_on:
      - headlines.db
      - headlines.mq
    networks:
      - headlines.network.internal
    ports:
      - 8083:80
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - WEB_UI_DOMAIN=${DOMAIN}
      #DATABASE
      - DB_LOGIN=${DB_LOGIN}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATA_SOURCE=${DB_DATA_SOURCE}
      - DB_INITIAL_CATALOG=${DB_INITIAL_CATALOG}
      #MESSAGE QUEUE
      - MQ_HOST=amqp://${MQ_HOST}:5672
      - MQ_USERNAME=${MQ_USERNAME}
      - MQ_PASSWORD=${MQ_PASSWORD}
      #OBJECT STORAGE
      - OS_URL=${OS_URL}
      - OS_ACCESS_KEY=${OS_ACCESS_KEY}
      - OS_SECRET_KEY=${OS_SECRET_KEY}
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro

  headlines.webui:
    container_name: headlines.webui
    build:
      context: .
      dockerfile: Headlines.WebUI/dockerfile/Dockerfile
    networks:
      - headlines.network.internal  
    volumes:
      - './Headlines.WebUI:/app'
      - '/app/node_modules'
    ports:
      - 8081:8080

  headlines.rss:
    container_name: headlines.rss
    restart: always
    build:
      context: .
      dockerfile: Headlines.RSSProcessingMicroService/Dockerfile
    ports:
      - 8082:80
    depends_on: 
      - headlines.db
    networks:
      - headlines.network.internal
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      #DATABASE
      - DB_LOGIN=${DB_LOGIN}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATA_SOURCE=${DB_DATA_SOURCE}
      - DB_INITIAL_CATALOG=${DB_INITIAL_CATALOG}
      #MESSAGE QUEUE
      - MQ_HOST=amqp://${MQ_HOST}:5672
      - MQ_USERNAME=${MQ_USERNAME}
      - MQ_PASSWORD=${MQ_PASSWORD}
      #OBJECT STORAGE
      - OS_URL=${OS_URL}
      - OS_ACCESS_KEY=${OS_ACCESS_KEY}
      - OS_SECRET_KEY=${OS_SECRET_KEY}
    volumes:
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro

  headlines.scrape:
    container_name: headlines.scrape
    image: ${DOCKER_REGISTRY-}headlinesscrapemicroservice
    build:
      context: .
      dockerfile: Headlines.ScrapeMicroService/Dockerfile
    ports:
      - 8084:80
    networks:
      - headlines.network.internal
    depends_on:
      - headlines.db
      - headlines.mq
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      #DATABASE
      - DB_LOGIN=${DB_LOGIN}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATA_SOURCE=${DB_DATA_SOURCE}
      - DB_INITIAL_CATALOG=${DB_INITIAL_CATALOG}
      #MESSAGE QUEUE
      - MQ_HOST=amqp://${MQ_HOST}:5672
      - MQ_USERNAME=${MQ_USERNAME}
      - MQ_PASSWORD=${MQ_PASSWORD}
      #OBJECT STORAGE
      - OS_URL=${OS_URL}
      - OS_ACCESS_KEY=${OS_ACCESS_KEY}
      - OS_SECRET_KEY=${OS_SECRET_KEY}